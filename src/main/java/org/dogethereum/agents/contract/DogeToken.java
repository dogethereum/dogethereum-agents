package org.dogethereum.agents.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes20;
import org.web3j.abi.datatypes.generated.Uint16;
import org.web3j.abi.datatypes.generated.Uint24;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint32;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tuples.generated.Tuple8;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.2.
 */
@SuppressWarnings("rawtypes")
public class DogeToken extends Contract {
    public static final String BINARY = "0x60c0604052600460808190526348302e3160e01b60a090815262000027916006919062000151565b503480156200003557600080fd5b5060405162003afb38038062003afb833981810160405260608110156200005b57600080fd5b508051602080830151604093840151845180860186526009808252682237b3b2aa37b5b2b760b91b82860190815287518089018952918252682227a3a2aa27a5a2a760b91b8287015233600090815260019096529685208590558480558151959693959294939192600892620000d5916003919062000151565b506004805460ff191660ff84161790558051620000fa90600590602084019062000151565b5050600780546001600160a01b039788166001600160a01b0319918216179091556008805460ff909616600160a01b0260ff60a01b19979098169590911694909417949094169490941790915550620001fd915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001895760008555620001d4565b82601f10620001a457805160ff1916838001178555620001d4565b82800160010185558215620001d4579182015b82811115620001d4578251825591602001919060010190620001b7565b50620001e2929150620001e6565b5090565b5b80821115620001e25760008155600101620001e7565b6138ee806200020d6000396000f3fe60806040526004361061020f5760003560e01c80639ed0031611610118578063cae9ca51116100a0578063d63ceb461161006f578063d63ceb4614610a46578063dd62ed3e14610aa2578063dd8f13bb14610add578063eac6617914610af2578063f5b2040014610b365761020f565b8063cae9ca51146108b3578063cf496b1014610943578063d4883991146106d2578063d48e6a9a146109745761020f565b8063b85278a9116100e7578063b85278a9146106d2578063ba24ecab14610774578063c0f76faf146107a1578063c3d5e186146107cb578063c5a4a2b7146108655761020f565b80639ed00316146106fc578063a9059cbb14610726578063b4eae1cb1461075f578063b52d521d146102145761020f565b806354fd4d501161019b5780636d440c6b1161016a5780636d440c6b1461063157806370a08231146106655780637b837b7a1461069857806395c39bf6146106d257806395d89b41146106e75761020f565b806354fd4d50146104c55780635be3b1b9146104da578063636a851514610503578063657857de146105315761020f565b806323b872dd116101e257806323b872dd14610327578063313ce5671461036a5780633e9745311461039557806341f7a1f7146104105780634b48a842146104915761020f565b806305347cdc1461021457806306fdde031461023b578063095ea7b3146102c557806318160ddd14610312575b600080fd5b34801561022057600080fd5b50610229610b4b565b60408051918252519081900360200190f35b34801561024757600080fd5b50610250610b53565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028a578181015183820152602001610272565b50505050905090810190601f1680156102b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d157600080fd5b506102fe600480360360408110156102e857600080fd5b506001600160a01b038135169060200135610be1565b604080519115158252519081900360200190f35b34801561031e57600080fd5b50610229610c48565b34801561033357600080fd5b506102fe6004803603606081101561034a57600080fd5b506001600160a01b03813581169160208101359091169060400135610c4e565b34801561037657600080fd5b5061037f610d85565b6040805160ff9092168252519081900360200190f35b3480156103a157600080fd5b506103c9600480360360208110156103b857600080fd5b50356001600160601b031916610d8e565b604080516001600160a01b03909716875260208701959095528585019390935263ffffffff9091166060850152608084015262ffffff1660a0830152519081900360c00190f35b34801561041c57600080fd5b506104406004803603602081101561043357600080fd5b503563ffffffff16610dd9565b604080516001600160a01b0390981688526001600160601b03199687166020890152878101959095526060870193909352608086019190915260a085015290911660c0830152519081900360e00190f35b34801561049d57600080fd5b50610229600480360360208110156104b457600080fd5b50356001600160601b031916610e27565b3480156104d157600080fd5b50610250610e46565b610501600480360360208110156104f057600080fd5b50356001600160601b031916610ea1565b005b34801561050f57600080fd5b50610518610f0d565b6040805163ffffffff9092168252519081900360200190f35b34801561053d57600080fd5b506105016004803603604081101561055457600080fd5b810190602081018135600160201b81111561056e57600080fd5b82018360208201111561058057600080fd5b803590602001918460018302840111600160201b831117156105a157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156105f357600080fd5b82018360208201111561060557600080fd5b803590602001918460018302840111600160201b8311171561062657600080fd5b509092509050610f20565b34801561063d57600080fd5b506105016004803603602081101561065457600080fd5b50356001600160601b03191661125e565b34801561067157600080fd5b506102296004803603602081101561068857600080fd5b50356001600160a01b03166113a6565b3480156106a457600080fd5b50610501600480360360408110156106bb57600080fd5b506001600160601b031981351690602001356113c1565b3480156106de57600080fd5b5061022961150f565b3480156106f357600080fd5b50610250611514565b34801561070857600080fd5b506102fe6004803603602081101561071f57600080fd5b503561156f565b34801561073257600080fd5b506102fe6004803603604081101561074957600080fd5b506001600160a01b0381351690602001356115fb565b34801561076b57600080fd5b5061037f6116a9565b34801561078057600080fd5b506107896116b9565b6040805162ffffff9092168252519081900360200190f35b3480156107ad57600080fd5b50610501600480360360208110156107c457600080fd5b50356116bf565b3480156107d757600080fd5b50610229600480360360808110156107ee57600080fd5b810190602081018135600160201b81111561080857600080fd5b82018360208201111561081a57600080fd5b803590602001918460018302840111600160201b8311171561083b57600080fd5b919350915080359060208101356001600160601b03191690604001356001600160a01b03166116db565b34801561087157600080fd5b5061088f6004803603602081101561088857600080fd5b503561197c565b604080516001600160601b0319909316835290151560208301528051918290030190f35b3480156108bf57600080fd5b506102fe600480360360608110156108d657600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561090557600080fd5b82018360208201111561091757600080fd5b803590602001918460018302840111600160201b8311171561093857600080fd5b5090925090506119ac565b34801561094f57600080fd5b50610958611b56565b604080516001600160a01b039092168252519081900360200190f35b34801561098057600080fd5b506109a46004803603602081101561099757600080fd5b503563ffffffff16611b65565b60405180896001600160a01b03168152602001886001600160601b031916815260200187815260200186815260200185815260200180602001848152602001836001600160601b0319168152602001828103825285818151815260200191508051906020019060200280838360005b83811015610a2b578181015183820152602001610a13565b50505050905001995050505050505050505060405180910390f35b348015610a5257600080fd5b50610a8060048036036040811015610a6957600080fd5b506001600160601b03198135169060200135611c50565b60408051938452602084019290925261ffff1682820152519081900360600190f35b348015610aae57600080fd5b5061022960048036036040811015610ac557600080fd5b506001600160a01b0381358116916020013516611cb2565b348015610ae957600080fd5b50610958611cdd565b348015610afe57600080fd5b506102fe60048036036060811015610b1557600080fd5b506001600160601b0319813581169160208101359160409091013516611cec565b348015610b4257600080fd5b50610229612240565b6311e1a30081565b6003805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610bd95780601f10610bae57610100808354040283529160200191610bd9565b820191906000526020600020905b815481529060010190602001808311610bbc57829003601f168201915b505050505081565b3360008181526002602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60005481565b6001600160a01b0383166000908152600160205260408120548211801590610c9957506001600160a01b03841660009081526002602090815260408083203384529091529020548211155b610ca257600080fd5b6001600160a01b038316600090815260016020526040902054610cc59083612246565b6001600160a01b038085166000908152600160205260408082209390935590861681522054610cf490836122a0565b6001600160a01b0385166000908152600160209081526040808320939093556002815282822033835290522054610d2b90836122a0565b6001600160a01b0380861660008181526002602090815260408083203384528252918290209490945580518681529051928716939192600080516020613899833981519152929181900390910190a35060015b9392505050565b60045460ff1681565b600b602052600090815260409020805460018201546002830154600484015460058501546006909501546001600160a01b03909416949293919263ffffffff9091169162ffffff1686565b60096020526000908152604090208054600182015460028301546003840154600485015460068601546007909601546001600160a01b0390951695606094851b959394929391929091901b87565b6001600160601b0319166000908152600b602052604090206003015490565b6006805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610bd95780601f10610bae57610100808354040283529160200191610bd9565b6001600160601b031981166000908152600b6020526040902080546001600160a01b03163314610ef4576040805161ea74815290516000805160206138798339815191529181900360200190a150610f0a565b6005810154610f039034612246565b6005909101555b50565b600854600160a81b900463ffffffff1681565b60008084600081518110610f3057fe5b602001015160f81c60f81b6001600160f81b031916600360f81b1490506021850151915060006002803360405160200180826001600160a01b031660601b81526014019150506040516020818303038152906040526040518082805190602001908083835b60208310610fb45780518252601f199092019160209182019101610f95565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa158015610ff3573d6000803e3d6000fd5b5050506040513d602081101561100857600080fd5b50516040805160208181019390935281518082038401815290820191829052805190928291908401908083835b602083106110545780518252601f199092019160209182019101611035565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa158015611093573d6000803e3d6000fd5b5050506040513d60208110156110a857600080fd5b5051604080516020601f88018190048102820181019092528681529192506000916110f09184919089908990819084018382808284376000920191909152506122e292505050565b90506110fc84846123b8565b6001600160a01b0316816001600160a01b031614611140576040805161ea6a815290516000805160206138798339815191529181900360200190a150505050611259565b600061114c858561245d565b6001600160601b031981166000908152600b602052604090208054919250906001600160a01b0316156111a7576040805161ea6f815290516000805160206138798339815191529181900360200190a1505050505050611259565b80546001600160a01b031990811633178255600c80546006909301805462ffffff90941662ffffff1990941693909317909255604080518082019091526001600160601b0319909316835260006020840181815283546001810185559390915292517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7909201805493511515600160a01b0260ff60a01b1960609490941c949092169390931791909116179055505050505b505050565b6001600160601b031981166000908152600b6020526040902080546001600160a01b031633146112b1576040805161ea74815290516000805160206138798339815191529181900360200190a150610f0a565b60018101541515806112c65750600281015415155b806112d45750600581015415155b15611302576040805161ea7e815290516000805160206138798339815191529181900360200190a150610f0a565b6006810154600c805460009262ffffff1690811061131c57fe5b60009182526020808320909101805460ff60a01b1916600160a01b1781556001600160601b031986168352600b9091526040822080546001600160a01b031916815560018101839055600281018390559092509061137d6003830182613715565b5060048101805463ffffffff1916905560006005820155600601805462ffffff19169055505050565b6001600160a01b031660009081526001602052604090205490565b6001600160601b031982166000908152600b6020526040902080546001600160a01b03163314611414576040805161ea74815290516000805160206138798339815191529181900360200190a15061150b565b8181600501541015611449576040805161ea88815290516000805160206138798339815191529181900360200190a15061150b565b6008546002820154600183015461147592600160a01b900460ff169161146f9190612246565b906125cd565b611498600a546114928585600501546122a090919063ffffffff16565b90612626565b10156114c7576040805161ea92815290516000805160206138798339815191529181900360200190a15061150b565b60058101546114d690836122a0565b6005820155604051339083156108fc029084906000818181858888f19350505050158015611508573d6000803e3d6000fd5b50505b5050565b600a81565b6005805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610bd95780601f10610bae57610100808354040283529160200191610bd9565b600073__Set___________________________________636ce8e081600d846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156115c957600080fd5b505af41580156115dd573d6000803e3d6000fd5b505050506040513d60208110156115f357600080fd5b505192915050565b3360009081526001602052604081205482111561161757600080fd5b3360009081526001602052604090205461163190836122a0565b33600090815260016020526040808220929092556001600160a01b0385168152205461165d9083612246565b6001600160a01b0384166000818152600160209081526040918290209390935580518581529051919233926000805160206138998339815191529281900390910190a350600192915050565b600854600160a01b900460ff1681565b600c5490565b6008546001600160a01b031633146116d657600080fd5b600a55565b6007546000906001600160a01b031633146116f557600080fd5b6001600160601b031983166000908152600b6020526040902080546001600160a01b031661174a576040805161ea9c815290516000805160206138798339815191529181900360200190a16000915050611973565b6000806000806117918b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c9250612668915050565b6040805163831cb73960e01b8152600d6004820152602481018f90529051949850929650909450925060009173__Set___________________________________9163831cb739916044808301926020929190829003018186803b1580156117f857600080fd5b505af415801561180c573d6000803e3d6000fd5b505050506040513d602081101561182257600080fd5b505190508061185d576040805161eaa6815290516000805160206138798339815191529181900360200190a160009650505050505050611973565b84156118c4576040805160608101825286815260208082018d815261ffff86811694840194855260038b81018054600180820183556000928352959091209551910290940193845590519183019190915591516002909101805461ffff1916919092161790555b60018601546118d39086612246565b60018701556001600160601b031989811690851614611951576311e1a30085101561192a576040805161eb14815290516000805160206138798339815191529181900360200190a160009650505050505050611973565b855461194390849087906001600160a01b03168b6127a2565b849650505050505050611973565b600286015461196090866122a0565b8660020181905550600096505050505050505b95945050505050565b600c818154811061198c57600080fd5b600091825260209091200154606081901b9150600160a01b900460ff1682565b3360008181526002602090815260408083206001600160a01b038916808552908352818420889055815188815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a36000856001600160a01b0316338630878760405160240180866001600160a01b03168152602001858152602001846001600160a01b0316815260200180602001828103825284848281815260200192508082843760008382015260408051601f909201601f1990811690940182810390940182529283526020810180516001600160e01b0316638f4ffcb160e01b17815292518151919a5098508897509195509093508392508591508490505b60208310611ad55780518252601f199092019160209182019101611ab6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611b37576040519150601f19603f3d011682016040523d82523d6000602084013e611b3c565b606091505b5050905080611b4a57600080fd5b50600195945050505050565b6007546001600160a01b031681565b63ffffffff81166000908152600960209081526040808320805460018201546002830154600384015460048501546005860180548851818b0281018b019099528089526001600160a01b0390961699606095861b9994989397929690948594929190830182828015611c2257602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611be55790505b50505050509350806006015492508060070160009054906101000a900460601b915050919395975091939597565b6001600160601b031982166000908152600b6020526040812060038101805483928392909183919087908110611c8257fe5b6000918252602090912060039091020180546001820154600290920154909991985061ffff169650945050505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6008546001600160a01b031681565b60006311e1a300831015611d25576040805161eab0815290516000805160206138798339815191529181900360200190a1506000610d7e565b33600090815260016020526040902054831115611d67576040805161eaba815290516000805160206138798339815191529181900360200190a1506000610d7e565b6001600160601b031982166000908152600b6020526040902080546001600160a01b0316611dbc576040805161eac4815290516000805160206138798339815191529181900360200190a16000915050610d7e565b8381600101541015611df5576040805161eace815290516000805160206138798339815191529181900360200190a16000915050610d7e565b60006103e8611e0586600a6125cd565b81611e0c57fe5b0490506000611e1b86836122a0565b905060606000806000611f2385886040518060e00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611eec5760008481526020908190206040805160608101825260038602909201805483526001808201548486015260029091015461ffff16918301919091529083529092019101611e9c565b50505090825250600482015463ffffffff1660208201526005820154604082015260069091015462ffffff166060909101526129e8565b9196509450925090508015611f63576040805182815290516000805160206138798339815191529181900360200190a16000975050505050505050610d7e565b86546001600160a01b0316600090815260016020526040902054611f879087612246565b87546001600160a01b0390811660009081526001602090815260409182902093909355895481518a8152915192169233926000805160206138998339815191529281900390910190a333600090815260016020526040902054611fea908b6122a0565b33600081815260016020908152604080832094909455835189815293519193600080516020613899833981519152929081900390910190a360085460408051600160a81b90920463ffffffff1682526001600160601b03198b16602083015280517fa452c19abf34fda31e59719208cf19c16be3dc9573465e8bf2ec1e4e89d3fad89281900390910190a1604051806101000160405280336001600160a01b031681526020018c6001600160601b03191681526020018b81526020018781526020014281526020018581526020018481526020018a6001600160601b03191681525060096000600860159054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b03021916908360601c021790555060408201518160020155606082015181600301556080820151816004015560a082015181600501908051906020019061218b929190613736565b5060c0820151600682015560e090910151600790910180546001600160a01b03191660609290921c9190911790556121d16121c68684612246565b6001890154906122a0565b600188015560028701546121e59083612246565b6002880155505090516004909401805463ffffffff808216909601861663ffffffff19909116179055505060088054600160a81b808204851660019081019095160263ffffffff60a81b199091161790555090509392505050565b600a5481565b600082820183811015610d7e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610d7e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612b69565b60008060008084516041146122fd5760009350505050610c42565b505050602082015160218301516041840151909160001a601b81101561232157601b015b8060ff16601b1415801561233957508060ff16601c14155b1561234a5760009350505050610c42565b60018682858560405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156123a4573d6000803e3d6000fd5b505050602060405103519350505050610c42565b6000806401000003d01984850990506401000003d01984820990506401000003d01960078208905060006123fd8263400000f4600160fe1b036401000003d019612c00565b905060018082161484151514612416576401000003d019035b6401000003d019818209821461242b57600080fd5b604080516020808201889052818301939093528151808203830181526060909101909152805191012091505092915050565b6000808261246f57600160f91b612475565b600360f81b5b905060036002828660405160200180836001600160f81b0319168152600101828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106124dc5780518252601f1990920191602091820191016124bd565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561251b573d6000803e3d6000fd5b5050506040513d602081101561253057600080fd5b50516040805160208181019390935281518082038401815290820191829052805190928291908401908083835b6020831061257c5780518252601f19909201916020918201910161255d565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa1580156125bb573d6000803e3d6000fd5b50506040515160601b95945050505050565b6000826125dc57506000610c42565b828202828482816125e957fe5b0414610d7e5760405162461bcd60e51b81526004018080602001828103825260218152602001806138586021913960400191505060405180910390fd5b6000610d7e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612c44565b6000806000806126766137e5565b6004808252606090819061268d908a906000612ca9565b855281519093509091506126b5908a9083906000906126a857fe5b6020026020010151612ddc565b151560a08501819052608085018290526000916126d19161245d565b905060008060006126e78c8e8960000151612e0f565b6001600160601b031993841660208c018190529096509194509250908d16148061271d57506001600160601b0319848116908d16145b61272657600080fd5b8b6001600160601b03191687602001516001600160601b0319161415612758576040870182905261ffff811660608801525b6001600160a01b03831661277e5761277b876080015160001c8860a001516123b8565b92505b50506040850151606090950151949850909650945091925050505b92959194509250565b60006103e86127b285600a6125cd565b816127b957fe5b6001600160a01b03851660009081526001602052604090205491900491506127e19082612246565b6001600160a01b038416600081815260016020908152604091829020939093558051848152905191927f275a11e033325e9b28a23131fcc7e243a49bb38beb686051976dd8c8899d9a3c92918290030190a26040805182815290516001600160a01b038516916000916000805160206138998339815191529181900360200190a360006103e861287286600a6125cd565b8161287957fe5b6001600160a01b03851660009081526001602052604090205491900491506128a19082612246565b6001600160a01b038416600081815260016020908152604091829020939093558051848152905191927f275a11e033325e9b28a23131fcc7e243a49bb38beb686051976dd8c8899d9a3c92918290030190a26040805182815290516001600160a01b038516916000916000805160206138998339815191529181900360200190a360006129388261293288866122a0565b906122a0565b6001600160a01b03881660009081526001602052604090205490915061295e9082612246565b6001600160a01b038816600081815260016020908152604091829020939093558051848152905191927f275a11e033325e9b28a23131fcc7e243a49bb38beb686051976dd8c8899d9a3c92918290030190a26040805182815290516001600160a01b038916916000916000805160206138998339815191529181900360200190a350505050505050565b60006060600080846060015151856080015163ffffffff1610612a0f5761ead89350612799565b60808501516302faf0809250600090805b8883108015612a3957508760600151518163ffffffff16105b15612a8c57612a7288606001518263ffffffff1681518110612a5757fe5b6020026020010151600001518461224690919063ffffffff16565b9250612a82856305f5e100612246565b9450600101612a20565b88831015612aa15761eae29650505050612799565b848911612ab55761eaec9650505050612799565b81810363ffffffff811667ffffffffffffffff81118015612ad557600080fd5b50604051908082528060200260200182016040528015612aff578160200160208202803683370190505b50965060005b8163ffffffff168163ffffffff161015612b4b57838101888263ffffffff1681518110612b2e57fe5b63ffffffff90921660209283029190910190910152600101612b05565b50612b56848b6122a0565b9450600097505050505092959194509250565b60008184841115612bf85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612bbd578181015183820152602001612ba5565b50505050905090810190601f168015612bea5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600060405160208152602080820152602060408201528460608201528360808201528260a082015260208160c08360055afa612c3b57600080fd5b51949350505050565b60008183612c935760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612bbd578181015183820152602001612ba5565b506000838581612c9f57fe5b0495945050505050565b606080600080600080612cbc8989612f52565b98509250861580612ccc57508287115b15612cd957829150612cdd565b8691505b60008267ffffffffffffffff81118015612cf657600080fd5b50604051908082528060200260200182016040528015612d20578160200160208202803683370190505b50905060008367ffffffffffffffff81118015612d3c57600080fd5b50604051908082528060200260200182016040528015612d66578160200160208202803683370190505b50905060005b84811015612dcc578a838281518110612d8157fe5b60200260200101818152505060248b019a50612d9d8c8c612f52565b809c50819550505083828281518110612db257fe5b602090810291909101015299830160040199600101612d6c565b50909a9099509650505050505050565b602401600080612dec8484612f52565b93506000905080612dfd8686613009565b975090955093505050505b9250929050565b6000806000806060806060612e2689896003613040565b8251909b5090955090935090915060009081805b8551811015612f0157612e748d878381518110612e5357fe5b6020026020010151898481518110612e6757fe5b60200260200101516131de565b93506001600160601b03198e81169085161415612e8f578092505b612ec08d878381518110612e9f57fe5b6020026020010151898481518110612eb357fe5b602002602001015161320c565b15612ef957612ef68d878381518110612ed557fe5b6020026020010151898481518110612ee957fe5b6020026020010151613275565b91505b600101612e3a565b508451821015612f35578c848381518110612f1857fe5b602002602001015183839950995099509950505050505050612f49565b506000985088975087965086955050505050505b93509350935093565b6000806000848481518110612f6357fe5b01602001516001949094019360f81c905060fd811015612f8a5760ff169150829050612e08565b8060ff1660fd1415612fb057612fa28585601061327e565b846002019250925050612e08565b8060ff1660fe1415612fd657612fc88585602061327e565b846004019250925050612e08565b8060ff1660ff1415612ffc57612fee8585604061327e565b846008019250925050612e08565b6000809250925050612e08565b60606000806000606060008061301f89896134ed565b9850925061302d8989613555565b949b919a50985092965091945050505050565b60608060606000806000806130558a8a612f52565b9950925087158061306557508288115b1561307257829150613076565b8791505b60008267ffffffffffffffff8111801561308f57600080fd5b506040519080825280602002602001820160405280156130b9578160200160208202803683370190505b50905060008367ffffffffffffffff811180156130d557600080fd5b506040519080825280602002602001820160405280156130ff578160200160208202803683370190505b50905060008467ffffffffffffffff8111801561311b57600080fd5b50604051908082528060200260200182016040528015613145578160200160208202803683370190505b50905060005b858110156131cc5761315f8e8e604061327e565b82828151811061316b57fe5b60200260200101818152505060088d019c506131878e8e612f52565b809e5081965050508c84828151811061319c57fe5b602002602001018181525050848382815181106131b557fe5b60209081029190910101529b84019b60010161314b565b509c919b509998509650505050505050565b60006131eb8484846135b7565b15613204576131fd84846003016136a2565b9050610d7e565b506000610d7e565b600081601614801561323e57508351603560f91b9085908590811061322d57fe5b01602001516001600160f81b031916145b801561326d57508351600560fa1b9085906001860190811061325c57fe5b01602001516001600160f81b031916145b949350505050565b50016016015190565b600081600814156132a45783838151811061329557fe5b016020015160f81c9050610d7e565b81601014156132fa578383600101815181106132bc57fe5b602001015160f81c60f81b60f81c60ff16610100028484815181106132dd57fe5b602001015160f81c60f81b60f81c60ff160161ffff169050610d7e565b816020141561339f5783836003018151811061331257fe5b602001015160f81c60f81b60f81c60ff1663010000000284846002018151811061333857fe5b602001015160f81c60f81b60f81c60ff16620100000285856001018151811061335d57fe5b602001015160f81c60f81b60f81c60ff166101000286868151811061337e57fe5b602001015160f81c60f81b60f81c60ff1601010163ffffffff169050610d7e565b8160401415613204578383600701815181106133b757fe5b602001015160f81c60f81b60f81c60ff16670100000000000000028484600601815181106133e157fe5b602001015160f81c60f81b60f81c60ff1666010000000000000285856005018151811061340a57fe5b602001015160f81c60f81b60f81c60ff16650100000000000286866004018151811061343257fe5b602001015160f81c60f81b60f81c60ff16600160201b0287876003018151811061345857fe5b602001015160f81c60f81b60f81c60ff1663010000000288886002018151811061347e57fe5b602001015160f81c60f81b60f81c60ff1662010000028989600101815181106134a357fe5b602001015160f81c60f81b60f81c60ff16610100028a8a815181106134c457fe5b602001015160f81c60f81b60f81c60ff160101010101010167ffffffffffffffff169050610d7e565b606060008060606134fe86866136f0565b95509150600960ff83161080159061351a575060498260ff1611155b61352357600080fd5b85858151811061352f57fe5b60209101015160f81c60301461354457600080fd5b9560ff919091169390930193505050565b60008060008061356586866136f0565b95509050602160ff82161461357957600080fd5b60008087878151811061358857fe5b602091010151978701602190810151996001600160f81b0319909916600360f81b149897019695505050505050565b60008160191480156135e757508383815181106135d057fe5b6020910101516001600160f81b031916603b60f91b145b801561361457508383600101815181106135fd57fe5b6020910101516001600160f81b03191660a960f81b145b8015613641575083836002018151811061362a57fe5b6020910101516001600160f81b031916600560fa1b145b801561366e575083836017018151811061365757fe5b6020910101516001600160f81b031916601160fb1b145b801561326d575083836018018151811061368457fe5b6020910101516001600160f81b031916602b60fa1b14949350505050565b600080805b60148110156136e557806013036008026001600160a01b031685858301815181106136ce57fe5b016020015160f81c901b91909101906001016136a7565b5060601b9392505050565b6000808383815181106136ff57fe5b016020015160f81c915050600182019250929050565b5080546000825560030290600052602060002090810190610f0a919061381a565b828054828255906000526020600020906007016008900481019282156137d55791602002820160005b838211156137a357835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261375f565b80156137d35782816101000a81549063ffffffff02191690556004016020816003010492830192600103026137a3565b505b506137e1929150613842565b5090565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b5b808211156137e1576000808255600182015560028101805461ffff1916905560030161381b565b5b808211156137e1576000815560010161384356fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77b56073699a886ff0a9e8b995881e51b5ccd562594c835e990ad2f7c35957a5a4ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ee4097af8960c15e5af4c338e7489bc403f090f4e22243771b8bc15608445b1064736f6c63430007060033";

    public static final String FUNC_MIN_LOCK_VALUE = "MIN_LOCK_VALUE";

    public static final String FUNC_MIN_UNLOCK_VALUE = "MIN_UNLOCK_VALUE";

    public static final String FUNC_OPERATOR_LOCK_FEE = "OPERATOR_LOCK_FEE";

    public static final String FUNC_OPERATOR_UNLOCK_FEE = "OPERATOR_UNLOCK_FEE";

    public static final String FUNC_SUPERBLOCK_SUBMITTER_LOCK_FEE = "SUPERBLOCK_SUBMITTER_LOCK_FEE";

    public static final String FUNC_ALLOWANCE = "allowance";

    public static final String FUNC_APPROVE = "approve";

    public static final String FUNC_APPROVEANDCALL = "approveAndCall";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_COLLATERALRATIO = "collateralRatio";

    public static final String FUNC_DECIMALS = "decimals";

    public static final String FUNC_DOGEETHPRICE = "dogeEthPrice";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_OPERATORKEYS = "operatorKeys";

    public static final String FUNC_OPERATORS = "operators";

    public static final String FUNC_SYMBOL = "symbol";

    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    public static final String FUNC_TRANSFER = "transfer";

    public static final String FUNC_TRANSFERFROM = "transferFrom";

    public static final String FUNC_TRUSTEDDOGEETHPRICEORACLE = "trustedDogeEthPriceOracle";

    public static final String FUNC_TRUSTEDRELAYERCONTRACT = "trustedRelayerContract";

    public static final String FUNC_UNLOCKIDX = "unlockIdx";

    public static final String FUNC_UNLOCKSPENDINGINVESTORPROOF = "unlocksPendingInvestorProof";

    public static final String FUNC_VERSION = "version";

    public static final String FUNC_ADDOPERATOR = "addOperator";

    public static final String FUNC_DELETEOPERATOR = "deleteOperator";

    public static final String FUNC_GETOPERATORSLENGTH = "getOperatorsLength";

    public static final String FUNC_ADDOPERATORDEPOSIT = "addOperatorDeposit";

    public static final String FUNC_WITHDRAWOPERATORDEPOSIT = "withdrawOperatorDeposit";

    public static final String FUNC_PROCESSTRANSACTION = "processTransaction";

    public static final String FUNC_WASDOGETXPROCESSED = "wasDogeTxProcessed";

    public static final String FUNC_DOUNLOCK = "doUnlock";

    public static final String FUNC_SETDOGEETHPRICE = "setDogeEthPrice";

    public static final String FUNC_GETUNLOCKPENDINGINVESTORPROOF = "getUnlockPendingInvestorProof";

    public static final String FUNC_GETUTXOSLENGTH = "getUtxosLength";

    public static final String FUNC_GETUTXO = "getUtxo";

    public static final Event APPROVAL_EVENT = new Event("Approval", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event ERRORDOGETOKEN_EVENT = new Event("ErrorDogeToken", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event NEWTOKEN_EVENT = new Event("NewToken", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event TRANSFER_EVENT = new Event("Transfer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event UNLOCKREQUEST_EVENT = new Event("UnlockRequest", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}, new TypeReference<Bytes20>() {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("1611783520013", "0xacd0e7C768d3A1EA2fa4caa41f67d01361b3CBC4");
    }

    @Deprecated
    protected DogeToken(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected DogeToken(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected DogeToken(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected DogeToken(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<ApprovalEventResponse> getApprovalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVAL_EVENT, transactionReceipt);
        ArrayList<ApprovalEventResponse> responses = new ArrayList<ApprovalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApprovalEventResponse typedResponse = new ApprovalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._spender = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApprovalEventResponse>() {
            @Override
            public ApprovalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVAL_EVENT, log);
                ApprovalEventResponse typedResponse = new ApprovalEventResponse();
                typedResponse.log = log;
                typedResponse._owner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._spender = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVAL_EVENT));
        return approvalEventFlowable(filter);
    }

    public List<ErrorDogeTokenEventResponse> getErrorDogeTokenEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ERRORDOGETOKEN_EVENT, transactionReceipt);
        ArrayList<ErrorDogeTokenEventResponse> responses = new ArrayList<ErrorDogeTokenEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ErrorDogeTokenEventResponse typedResponse = new ErrorDogeTokenEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.err = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ErrorDogeTokenEventResponse> errorDogeTokenEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ErrorDogeTokenEventResponse>() {
            @Override
            public ErrorDogeTokenEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ERRORDOGETOKEN_EVENT, log);
                ErrorDogeTokenEventResponse typedResponse = new ErrorDogeTokenEventResponse();
                typedResponse.log = log;
                typedResponse.err = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ErrorDogeTokenEventResponse> errorDogeTokenEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ERRORDOGETOKEN_EVENT));
        return errorDogeTokenEventFlowable(filter);
    }

    public List<NewTokenEventResponse> getNewTokenEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(NEWTOKEN_EVENT, transactionReceipt);
        ArrayList<NewTokenEventResponse> responses = new ArrayList<NewTokenEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            NewTokenEventResponse typedResponse = new NewTokenEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.user = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<NewTokenEventResponse> newTokenEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, NewTokenEventResponse>() {
            @Override
            public NewTokenEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(NEWTOKEN_EVENT, log);
                NewTokenEventResponse typedResponse = new NewTokenEventResponse();
                typedResponse.log = log;
                typedResponse.user = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<NewTokenEventResponse> newTokenEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(NEWTOKEN_EVENT));
        return newTokenEventFlowable(filter);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse._to = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TransferEventResponse> transferEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse._from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse._to = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TransferEventResponse> transferEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TRANSFER_EVENT));
        return transferEventFlowable(filter);
    }

    public List<UnlockRequestEventResponse> getUnlockRequestEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(UNLOCKREQUEST_EVENT, transactionReceipt);
        ArrayList<UnlockRequestEventResponse> responses = new ArrayList<UnlockRequestEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UnlockRequestEventResponse typedResponse = new UnlockRequestEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.operatorPublicKeyHash = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<UnlockRequestEventResponse> unlockRequestEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, UnlockRequestEventResponse>() {
            @Override
            public UnlockRequestEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(UNLOCKREQUEST_EVENT, log);
                UnlockRequestEventResponse typedResponse = new UnlockRequestEventResponse();
                typedResponse.log = log;
                typedResponse.id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.operatorPublicKeyHash = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<UnlockRequestEventResponse> unlockRequestEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UNLOCKREQUEST_EVENT));
        return unlockRequestEventFlowable(filter);
    }

    public RemoteFunctionCall<BigInteger> MIN_LOCK_VALUE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MIN_LOCK_VALUE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> MIN_UNLOCK_VALUE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MIN_UNLOCK_VALUE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> OPERATOR_LOCK_FEE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OPERATOR_LOCK_FEE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> OPERATOR_UNLOCK_FEE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OPERATOR_UNLOCK_FEE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> SUPERBLOCK_SUBMITTER_LOCK_FEE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPERBLOCK_SUBMITTER_LOCK_FEE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> allowance(String _owner, String _spender) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ALLOWANCE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_owner), 
                new org.web3j.abi.datatypes.Address(_spender)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> approve(String _spender, BigInteger _value) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_spender), 
                new org.web3j.abi.datatypes.generated.Uint256(_value)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> approveAndCall(String _spender, BigInteger _value, byte[] _extraData) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPROVEANDCALL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_spender), 
                new org.web3j.abi.datatypes.generated.Uint256(_value), 
                new org.web3j.abi.datatypes.DynamicBytes(_extraData)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> balanceOf(String _owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_BALANCEOF, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_owner)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> collateralRatio() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_COLLATERALRATIO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> decimals() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DECIMALS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> dogeEthPrice() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DOGEETHPRICE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> name() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple2<byte[], Boolean>> operatorKeys(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OPERATORKEYS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes20>() {}, new TypeReference<Bool>() {}));
        return new RemoteFunctionCall<Tuple2<byte[], Boolean>>(function,
                new Callable<Tuple2<byte[], Boolean>>() {
                    @Override
                    public Tuple2<byte[], Boolean> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<byte[], Boolean>(
                                (byte[]) results.get(0).getValue(), 
                                (Boolean) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple6<String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>> operators(byte[] param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OPERATORS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes20(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint32>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint24>() {}));
        return new RemoteFunctionCall<Tuple6<String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple6<String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple6<String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteFunctionCall<String> symbol() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SYMBOL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> totalSupply() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TOTALSUPPLY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> transfer(String _to, BigInteger _value) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_to), 
                new org.web3j.abi.datatypes.generated.Uint256(_value)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferFrom(String _from, String _to, BigInteger _value) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFERFROM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_from), 
                new org.web3j.abi.datatypes.Address(_to), 
                new org.web3j.abi.datatypes.generated.Uint256(_value)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> trustedDogeEthPriceOracle() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TRUSTEDDOGEETHPRICEORACLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> trustedRelayerContract() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TRUSTEDRELAYERCONTRACT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> unlockIdx() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_UNLOCKIDX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple7<String, byte[], BigInteger, BigInteger, BigInteger, BigInteger, byte[]>> unlocksPendingInvestorProof(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_UNLOCKSPENDINGINVESTORPROOF, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bytes20>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bytes20>() {}));
        return new RemoteFunctionCall<Tuple7<String, byte[], BigInteger, BigInteger, BigInteger, BigInteger, byte[]>>(function,
                new Callable<Tuple7<String, byte[], BigInteger, BigInteger, BigInteger, BigInteger, byte[]>>() {
                    @Override
                    public Tuple7<String, byte[], BigInteger, BigInteger, BigInteger, BigInteger, byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, byte[], BigInteger, BigInteger, BigInteger, BigInteger, byte[]>(
                                (String) results.get(0).getValue(), 
                                (byte[]) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (byte[]) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<String> version() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_VERSION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> addOperator(byte[] operatorPublicKeyCompressed, byte[] signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDOPERATOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicBytes(operatorPublicKeyCompressed), 
                new org.web3j.abi.datatypes.DynamicBytes(signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteOperator(byte[] operatorPublicKeyHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETEOPERATOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes20(operatorPublicKeyHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getOperatorsLength() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETOPERATORSLENGTH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint24>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> addOperatorDeposit(byte[] operatorPublicKeyHash, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDOPERATORDEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes20(operatorPublicKeyHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> withdrawOperatorDeposit(byte[] operatorPublicKeyHash, BigInteger value) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_WITHDRAWOPERATORDEPOSIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes20(operatorPublicKeyHash), 
                new org.web3j.abi.datatypes.generated.Uint256(value)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> processTransaction(byte[] dogeTx, BigInteger txHash, byte[] operatorPublicKeyHash, String superblockSubmitterAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PROCESSTRANSACTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicBytes(dogeTx), 
                new org.web3j.abi.datatypes.generated.Uint256(txHash), 
                new org.web3j.abi.datatypes.generated.Bytes20(operatorPublicKeyHash), 
                new org.web3j.abi.datatypes.Address(superblockSubmitterAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> wasDogeTxProcessed(BigInteger txHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_WASDOGETXPROCESSED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(txHash)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> doUnlock(byte[] dogeAddress, BigInteger value, byte[] operatorPublicKeyHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DOUNLOCK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes20(dogeAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(value), 
                new org.web3j.abi.datatypes.generated.Bytes20(operatorPublicKeyHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setDogeEthPrice(BigInteger _dogeEthPrice) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETDOGEETHPRICE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_dogeEthPrice)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple8<String, byte[], BigInteger, BigInteger, BigInteger, List<BigInteger>, BigInteger, byte[]>> getUnlockPendingInvestorProof(BigInteger index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETUNLOCKPENDINGINVESTORPROOF, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint32(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Bytes20>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicArray<Uint32>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bytes20>() {}));
        return new RemoteFunctionCall<Tuple8<String, byte[], BigInteger, BigInteger, BigInteger, List<BigInteger>, BigInteger, byte[]>>(function,
                new Callable<Tuple8<String, byte[], BigInteger, BigInteger, BigInteger, List<BigInteger>, BigInteger, byte[]>>() {
                    @Override
                    public Tuple8<String, byte[], BigInteger, BigInteger, BigInteger, List<BigInteger>, BigInteger, byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<String, byte[], BigInteger, BigInteger, BigInteger, List<BigInteger>, BigInteger, byte[]>(
                                (String) results.get(0).getValue(), 
                                (byte[]) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                convertToNative((List<Uint32>) results.get(5).getValue()), 
                                (BigInteger) results.get(6).getValue(), 
                                (byte[]) results.get(7).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getUtxosLength(byte[] operatorPublicKeyHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETUTXOSLENGTH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes20(operatorPublicKeyHash)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>> getUtxo(byte[] operatorPublicKeyHash, BigInteger i) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETUTXO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes20(operatorPublicKeyHash), 
                new org.web3j.abi.datatypes.generated.Uint256(i)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint16>() {}));
        return new RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    @Deprecated
    public static DogeToken load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new DogeToken(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static DogeToken load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new DogeToken(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static DogeToken load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new DogeToken(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static DogeToken load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new DogeToken(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<DogeToken> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _trustedRelayerContract, String _trustedDogeEthPriceOracle, BigInteger _collateralRatio) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_trustedRelayerContract), 
                new org.web3j.abi.datatypes.Address(_trustedDogeEthPriceOracle), 
                new org.web3j.abi.datatypes.generated.Uint8(_collateralRatio)));
        return deployRemoteCall(DogeToken.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<DogeToken> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _trustedRelayerContract, String _trustedDogeEthPriceOracle, BigInteger _collateralRatio) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_trustedRelayerContract), 
                new org.web3j.abi.datatypes.Address(_trustedDogeEthPriceOracle), 
                new org.web3j.abi.datatypes.generated.Uint8(_collateralRatio)));
        return deployRemoteCall(DogeToken.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<DogeToken> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _trustedRelayerContract, String _trustedDogeEthPriceOracle, BigInteger _collateralRatio) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_trustedRelayerContract), 
                new org.web3j.abi.datatypes.Address(_trustedDogeEthPriceOracle), 
                new org.web3j.abi.datatypes.generated.Uint8(_collateralRatio)));
        return deployRemoteCall(DogeToken.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<DogeToken> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _trustedRelayerContract, String _trustedDogeEthPriceOracle, BigInteger _collateralRatio) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_trustedRelayerContract), 
                new org.web3j.abi.datatypes.Address(_trustedDogeEthPriceOracle), 
                new org.web3j.abi.datatypes.generated.Uint8(_collateralRatio)));
        return deployRemoteCall(DogeToken.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class ApprovalEventResponse extends BaseEventResponse {
        public String _owner;

        public String _spender;

        public BigInteger _value;
    }

    public static class ErrorDogeTokenEventResponse extends BaseEventResponse {
        public BigInteger err;
    }

    public static class NewTokenEventResponse extends BaseEventResponse {
        public String user;

        public BigInteger value;
    }

    public static class TransferEventResponse extends BaseEventResponse {
        public String _from;

        public String _to;

        public BigInteger _value;
    }

    public static class UnlockRequestEventResponse extends BaseEventResponse {
        public BigInteger id;

        public byte[] operatorPublicKeyHash;
    }
}
