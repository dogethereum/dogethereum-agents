# Whether to enable Doge block submitter agent.
doge.superblock.submitter.enabled = true

# Whether to enable Altruistic tx relayer agent.
doge.tx.relayer.enabled = true

# Whether to enable Operator agent.
# Signs and broadcast doge unlock txs and relay those txs to eth.
operator.enabled = true

# whether to send doge-eth price updates to DogeToken
price.oracle.enabled = true

# Whether to enable Doge block challenger agent.
doge.superblock.challenger.enabled = true

# local (when using doge regtest and eth ganache) or integration (when using doge mainnet and eth rinkeby)
constants = local
# constants = integration
# constants = ethganachedogemain

# Minimum gas price used for all the txs
# Gas price is estimated by the ethereum node. If ethereum node estimate is bellow
# gas.price.min value, gas.price.min value will be used instead.
gas.price.min = 1

# Gas limit used for all the txs
gas.limit = 4000000

# Address used for sending/defending superblocks and contract calls that don't consume gas.
# In local mode, no need to specify this, it is taken from web3.eth.accounts[0]
# Example:
# general.purpose.and.send.superblocks.address = 0x829bd824b016326a401d083b33d092293333a830

# Address used for relayTx
# In local mode, no need to specify this, it is taken from web3.eth.accounts[1]
# Example:
# relay.txs.address = 0x829bd824b016326a401d083b33d092293333a830

# Address used for sending doge-eth price oracle txs
# In local mode, no need to specify this, it is taken from web3.eth.accounts[2]
# Example:
# price.oracle.address = 0x829bd824b016326a401d083b33d092293333a830

# Address used for challenging invalid superblocks.
# In local mode, no need to specify this, it is taken from web3.eth.accounts[3]
# Example:
# doge.superblock.challenger.address = 0x829bd824b016326a401d083b33d092293333a830

# Address where DogeToken is deployed.
# In local mode, no need to specify this, truffle.build.contracts.directory is used
# to find the truffle json files where the contract address is specified.
# Example:
# dogeToken.contract.address = 0x829bd824b016326a401d083b33d092293333a830

# Address where DogeClaimManager is deployed.
# In local mode, no need to specify this, truffle.build.contracts.directory is used
# to find the truffle json files where the contract address is specified.
# Example:
# dogeClaimManager.contract.address = 0x829bd824b016326a401d083b33d092293333a830

# Address where DogeSuperblocks is deployed.
# In local mode, no need to specify this, truffle.build.contracts.directory is used
# to find the truffle json files where the contract address is specified.
# Example:
# dogeSuperblocks.contract.address = 0x829bd824b016326a401d083b33d092293333a830

# Address where Scrypt-Interactive's ClaimManager is deployed.
# In local mode, no need to specify this, truffle.build.contracts.directory is used
# to find the truffle json files where the contract ScryptCheckerDummy is specified.
# Example:
# scryptVerifier.contract.address = 0x829bd824b016326a401d083b33d092293333a830

# Path of the deployment json. Just used on local mode
# Example:
deployment.path = /yourpath/build/contracts

# Directory where dogethereum agents store doge blockchain, wallet and spv proofs.
# Example:
data.directory = /yourDataDirPath

# Path to the Bridge Operator private key file
# Example:
operator.private.key.file.path = /yourPath

#  To recreate the value use
#  new GregorianCalendar(2018,1,1).getTimeInMillis() / 1000;
#  Currently set to:
#  Thu Feb 01 00:00:00 ART 2018
operator.address.creation.time = 1517454000

# Whether to automatically withdraw funds after a battle is finished
withdraw.funds.enabled = true

# Upper bound for deposited funds; some will be withdrawn if they surpass this limit
deposited.funds.limit = 100